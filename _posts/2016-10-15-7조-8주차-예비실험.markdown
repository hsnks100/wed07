# 개요
UART 를 통한 개발 보드와 스마트폰간의 블루투스 통신 
  
# 세팅


## android studio

먼저 스마트폰에서 블루투스앱을 올려야 한다. 그러기 위해 샘플 프로젝트가 있다.

BlueTooth 프로젝트를 android studio 에서 import 한 뒤 자신이 쓰는 스마트폰에 올린다.

<br>


PC <--> BOARD <--> BLUETOOTH(스마트폰)

의 구도로 연결이 되는데, PC 와 BOARD 는 UART1 으로 연결시키고 BOARD 와 BLUETOOTH 모듈은 UART2 로 연결 시킨다.


## PC <-> BOARD

그림과 같이 연결한다.

## BOARD <-> BLUETOOTH 

먼저 




<br>


## 포트 연결

전체적인 기계 연결 모습

<br>
<br>
<br>

# 기본 개념 (배경 지식)

## 블루투스 

![](../images/pre_exp/bluetooth.jpg)

블루투스는 휴대폰 - 휴대폰 또는 휴대폰 - PC 간에 사진이나 벨소리 등의 파일을 전송하는 무선전송기술이다. 

## 블루투스 통신 개요와 마스터 슬레이브 구조

![](../images/pre_exp/masterslave.png)

블루투스의 무선 시스템은 ISM 주파수 대역인 2400~2483.5MHz를 사용한다. 이 주파수 대역은 산업, 의료, 과학용으로 할당된 주파수로 따로 전파사용에 대한 허가를 받을 필요가 
없어서 개인 무선 통신에 쓰인다.
좁은 대역대에 많은 기기가 몰리다보니 충돌이나 간섭 가능성이 생기게 됐는데, 이를 피하기 위해 주파수 호핑방식을 블루투스에서 쓰게 되는데 
주파수 호핑 방식은 짧은 시간에 주파수를 이동하면서 패킷을 잘게잘게 보내는 방식이다. 이 호핑 방식을 매칭하는게 일반적인 우리가 알고 있는 블루투스 연결이라는 개념이다.

즉, 마스터가 생성하는 주파수호핑에 슬레이브가 동기화시켜야 한다. 


## 블루투스 프로파일과 SPP

블루투스에는 프로파일이라는것이 있는데 프로파일은 어떤 종류의 데이터를 보내는지 명확하게 정의하기 위한,
블루투스의 표준스펙중 하나다.

HSP, HID, SPP, A2DP 와 같은 여러가지 프로파일이 있는데 우리가 다룰 프로파일은 SPP 이다.


Serial Port Profile (SPP) 은 RS-232 통신을 무선으로 대체시키려고 할 때 쓴다.
SPP 를 이용하면 두 장치가 RX, TX 가 유선으로 연결된 것 처럼 동작한다.  

<br>

## 블루투스 SSID와 UUID

###SSID (Service Set Identifier)

SSID 는 Wi-Fi 네트워크 이름이다.
SSID 는 주변 장치에서 무선 라우터를 식별할 수 있도록 무선 라우터가 브로드캐스트하는 이름입니다.

###UUID (Universally Unique Identifier)

블루투스에는 Wi-Fi 의 대응되는 개념으로 UUID 가 있다.  

블루투스의 UUID란 범용 고유 번호(Universally Unique Identifiers)라고 불리며 128비트의 숫자들을 조합한다. 
말 그대로 범용적으로 사용할 수 있는 고유의 ID를 사용하기 위하여 생성되며, 그렇기 때문에 128비트의 Hex조합은 
Unique하여야 한다. 
Bluetooth에서는 device에서 제공하는 service를 검색하여 각 service마다 UUID를 부여하는 등 많은 부분에서 사용된다.


안드로이드 샘플앱의 다음 파일에 uuid 가 정해지고 있는것을 알 수 있다.
BluetoothChatService.java ... UUID.fromString("8ce255c0-200a-11e0-ac64-0800200c9a66");


<br>

## FB755AC 모듈 

![](../images/pre_exp/FB755AC_spec3.jpg) 

- 펌테크에서 나온 제품으로 최대 7대 까지 슬레이브를 잡을 수 있으며, 100m 까지 인식 

- 12 Pin Header Type 으로 되어있어 제품에 쉽게 적용 가능

- AT 명령어를 지원하며 AT 명령어를 이용하여 FB755AD 제어 가능

- Smartphone, Notebook, PDA 등의 스마트 장치들과 연결 및 통신 가능성이


### 각 PIN 과 기능

![](../images/pre_exp/pin.PNG)

STATUS PIN은 블루투스 모듈의 상태를 모니터링 하기 위해 사용된다.
블루투스 연결을 대기 하거나 연결 시도 및 주변의 블루투스 장치를 검색 할 때는 LOW, HIGH를 반복하게 된다.

CTS/RTS/DSR/DTR PIN은 흐름제어를 사용하지 않을 시에는 연결하지 않아도 동작에 영향을 주지 않는다.

CONFIG_SELECT PIN을 사용하여 블루투스 설정을 할 수 있다.

* 환경 설정 화면?

DCD PIN의 경우 1:N 통신시 마스터와 슬레이브의 connect check를 하고 1:1 통신 시에는 UART data carrier detect로 사용한다.

VCC와 GND PIN을 각각 보드에 연결하고 RXD PIN과 TXD PIN은 stm32보드와 반대로 연결하여야 한다.

따라서 이번 실험의 경우 블루투스 모듈과 STM32 보드의 연결도는 다음과 같아야 한다.

![](../images/pre_exp/nflowcont.PNG)



<br>

## AT 명령어

헤이즈 마이크로컴퓨터 사가 개발한 헤이즈 스마트 모뎀과 그 호환 모뎀을 제어하기위해 사용되는 명령어로 현재에는 사실상 거의 모든 모뎀의 표준 명령어이다.

본래는의 명칭은 헤이즈 명령어인데, 통상 AT로 명령어가 시작되기 때문에 AT명령어라고 불린다.

AT란 준비라는 뜻을 가진 Attention의 앞글자인 AT에서 따온 말로 헤이즈 명령어는 AT+Command와 같이 매우 간단한 명령어 구조를 가지고 있다.

즉 AT뒤에 원하는 명령어를 적어주기만 하면 되는데 한 명령어를 한 줄에 다 적어도 계속 이어 붙여 적을 수 있으므로 편리하다.

이 외에 헤이즈 모뎀명령어에는 ‘+++’과 ‘A/’가 추가적으로 있는데 이는 독자적으로 사용되는 명령어이다.
이 두 개를 제외한 명령어들은 거의 명령어 앞에 AT를 적어 사용한다.

또한 AT외에 at라고 사용하여도 되나 aT나 At와 같이 쓰면 인식하지 못하므로 이는 피해야하며 명령어는 한 줄에 40자까지 적을 수 있다.

이번 실험에서는 이 AT명령어로 Bluetooth 모듈이 모바일에서 검색 및 연결을 대기할 수 있도록 만들어 주기위해 사용되며 AT+BTSCAN의 명령어를 사용한다.

![](../images/pre_exp/btscan.PNG)


# 실험 방법

PC terminal 에서 메세지를 입력하면 UART를 이용하여 board 에 전달. board 에서 다른 UART 통신을 이용하여
Blue-tooth 에게 Smart phone 에 전달하라고 명령을 보낸다. 

## 개발보드와 FB755AC 연결(납땜) 방법

![](../images/pre_exp/soldering.jpg)


최대한 이쁘게 납땜해야 나중에 문제 생겼을 때 파악하기 쉽다.

-------------

납땜이 끝나고 멀티미터로 연결이 되었는지 전부 확인.

## FB755AC 설정

```
- 2, 3, 4번 : 사용 X 
- 1, 6번 : LED 와 연결 (LED의 다리 긴쪽이 (+))
- 12번 : VCC 엔 보드 VCC 연결 
- 9번 : RX 와 보드의 PA2 또는 PA3 연결
- 8번 : TX 와 보드의 PA2 또는 PA3 연결 
- 5번 : 점프선으로 연결하여, 기본 low 값으로 점프선을 high 부분에 연결할 수 있도록 만든다. 
```

<br>
USART1 은 baud rate 57600 
USART2 은 baud rate 9600

5번 포트가 설정할지 안할지 설정하는 건데, 점프선으로 간단하게 실험 가능하도록 세팅 해야함.
5번 포트가 high 로 연결 되어있으면 설정모드고 low 면 설정모드가 아님!!  


## 실습 과정

코드 작성 후, 보드 전원을 인가 시키는 순간 터미널(putty) 에 설정하는 화면이 뜨는게 정상.

그리고 AT 명령어를 전송하면서 제대로 통신이 되고 있음을 확인한다.

또한, Configuration 모드를 해제하여 스마트폰과 채팅이 되고 있는지 확인한다.  
